"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2066],{2066:function(e,r,t){t.d(r,{zB:function(){return f}}),t(5893);var n=t(7294);class a extends Error{constructor(e,r){e instanceof Error?super(void 0,{cause:{err:e,...e.cause,...r}}):"string"==typeof e?(r instanceof Error&&(r={err:r,...r.cause}),super(e,r)):super(void 0,e),Error.captureStackTrace?.(this,this.constructor),this.name=e instanceof a?e.name:this.constructor.name}}class o extends a{}async function s(e,r,t,n={}){let a=`${i(r)}/${e}`;try{let e={headers:{"Content-Type":"application/json",...n?.headers?.cookie?{cookie:n.headers.cookie}:{}}};n?.body&&(e.body=JSON.stringify(n.body),e.method="POST");let r=await fetch(a,e),t=await r.json();if(!r.ok)throw t;return t}catch(e){return t.error(new o(e.message,e)),null}}function i(e){return"undefined"==typeof window?`${e.baseUrlServer}${e.basePathServer}`:e.basePath}function c(e){let r=new URL("http://localhost:3000/api/auth");e&&!e.startsWith("http")&&(e=`https://${e}`);let t=new URL(e??r),n=("/"===t.pathname?r.pathname:t.pathname).replace(/\/$/,""),a=`${t.origin}${n}`;return{origin:t.origin,host:t.host,path:n,base:a,toString:()=>a}}var u=t(3454);let l={baseUrl:c(u.env.NEXTAUTH_URL??u.env.VERCEL_URL).origin,basePath:c(u.env.NEXTAUTH_URL).path,baseUrlServer:c(u.env.NEXTAUTH_URL_INTERNAL??u.env.NEXTAUTH_URL??u.env.VERCEL_URL).origin,basePathServer:c(u.env.NEXTAUTH_URL_INTERNAL??u.env.NEXTAUTH_URL).path,_lastSync:0,_session:void 0,_getSession:()=>{}},h={debug:console.debug,error:console.error,warn:console.warn};async function w(){let e=await s("csrf",l,h);return e?.csrfToken}async function d(){return s("providers",l,h)}async function f(e,r,t){let{callbackUrl:n=window.location.href,redirect:a=!0}=r??{},o=i(l),s=await d();if(!s){window.location.href=`${o}/error`;return}if(!e||!(e in s)){window.location.href=`${o}/signin?${new URLSearchParams({callbackUrl:n})}`;return}let c="credentials"===s[e].type,u="email"===s[e].type,h=`${o}/${c?"callback":"signin"}/${e}`,f=`${h}?${new URLSearchParams(t)}`,p=await fetch(f,{method:"post",headers:{"Content-Type":"application/x-www-form-urlencoded","X-Auth-Return-Redirect":"1"},body:new URLSearchParams({...r,csrfToken:await w(),callbackUrl:n})}),U=await p.json();if(a||!(c||u)){let e=U.url??n;window.location.href=e,e.includes("#")&&window.location.reload();return}let v=new URL(U.url).searchParams.get("error");return p.ok&&await l._getSession({event:"storage"}),{error:v,status:p.status,ok:p.ok,url:v?null:U.url}}n.createContext?.(void 0)}}]);